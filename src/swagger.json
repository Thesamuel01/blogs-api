{
  "openapi": "3.0.0",
  "info": {
    "title": "Blogs API",
    "description": "Blogs API is a simplify system to manage users and posts from a blog.",
    "contact": {
      "email": "samueldev8@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Test API"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "Logs user into system",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "test@email.com",
                    "password": "test123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missing-fields": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Some required fields are missing"
                    }
                  },
                  "user-does-not-exist": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Invalid fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "statusCode": 500,
                  "error": "Internal Server Error",
                  "message": "Generic Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}